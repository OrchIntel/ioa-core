# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2025 OrchIntel Systems Ltd.
# https://orchintel.com | https://ioa.systems
#
# Part of IOA Core (Open Source Edition). See LICENSE at repo root.

# IOA Agent Configuration v2.1.0 | A17 | Last updated: 2025-08-21
# Description: Agent system configuration for IOA multi-agent orchestration
# License: IOA Dev Confidential – Internal Use Only

# PATCH: Cursor-2025-08-21 DISPATCH-GPT-20250821-007 <agent-to-model terminology refactor>

# ============================================================================
# IOA AGENT CONFIGURATION
# ============================================================================
# Centralized configuration for agent registration, capabilities, and routing
# Used by agent_router.py and roundtable_executor.py for agent management

# Global agent system settings
agent_system:
  enabled: true
  default_timeout_seconds: 30
  heartbeat_interval_seconds: 60
  auto_recovery_enabled: true
  performance_monitoring: true

# Agent routing configuration
routing:
  load_balancing_enabled: true
  capability_matching_strict: false
  fallback_agent_enabled: true
  retry_attempts: 3
  retry_delay_seconds: 1
  round_robin_enabled: true

# Default agent capabilities
default_capabilities:
  - "execution"
  - "analysis" 
  - "text_processing"

# Agent profiles and configurations
  # Generic Analysis Model
    name: "AnalysisModel"
    type: "llm_service"
    role: "Analyst"
    description: "Primary analysis model powered by a large language model"
    service_class: "LLMService"
    capabilities:
      - "execution"
      - "analysis"
      - "reasoning"
      - "text_generation"
      - "problem_solving"
    priority: 1
    max_requests_per_minute: 60
    cost_per_request: 0.03
    confidence_threshold: 0.7
    enabled: true
    config:
      temperature: 0.7
      max_tokens: 2000
      top_p: 1.0

  # Generic Code Reviewer Model
  code_reviewer:
    name: "CodeReviewer"
    type: "llm_service" 
    role: "Code Reviewer"
    description: "Code review and technical analysis model"
    service_class: "LLMService"
    capabilities:
      - "execution"
      - "code_review"
      - "technical_analysis"
      - "debugging"
      - "documentation"
    priority: 2
    max_requests_per_minute: 40
    cost_per_request: 0.025
    confidence_threshold: 0.75
    enabled: false  # Disabled by default, enable when API key available
    config:
      temperature: 0.3
      max_tokens: 4000

  # Generic Research Model
    name: "ResearchModel"
    type: "llm_service"
    role: "Research Specialist"
    description: "Research and multi‑modal analysis model"
    service_class: "LLMService"
    capabilities:
      - "execution"
      - "research"
      - "multi_modal_analysis"
      - "fact_checking"
      - "summarization"
    priority: 3
    max_requests_per_minute: 30
    cost_per_request: 0.02
    confidence_threshold: 0.8
    enabled: false  # Disabled by default
    config:
      temperature: 0.5
      max_tokens: 3000

  # Pattern Weaver Agent (Internal)
  pattern_weaver:
    name: "PatternWeaver"
    type: "internal_agent"
    role: "Pattern Discovery"
    description: "Automated pattern discovery and clustering agent"
    service_class: "PatternWeaver"
    capabilities:
      - "pattern_discovery"
      - "clustering"
      - "data_analysis"
      - "classification"
    priority: 4
    max_requests_per_minute: 100
    cost_per_request: 0.0
    confidence_threshold: 0.6
    enabled: true
    config:
      clustering_method: "keyword_similarity"
      similarity_threshold: 0.7
      min_cluster_size: 2
      batch_size: 50

  # Sentience Mapper Agent (Internal)
  sentience_mapper:
    name: "SentienceMapper"
    type: "internal_agent"
    role: "Emotion Analysis"
    description: "VAD emotional scoring and sentiment analysis"
    service_class: "SentienceMapper"
    capabilities:
      - "sentiment_analysis"
      - "emotion_mapping"
      - "vad_scoring"
      - "psychological_analysis"
    priority: 5
    max_requests_per_minute: 200
    cost_per_request: 0.0
    confidence_threshold: 0.5
    enabled: true
    config:
      vad_enabled: true
      confidence_boost: 0.1

  # Fallback Agent (Mock for testing)
    name: "FallbackAgent"
    type: "mock_agent"
    role: "Fallback"
    description: "Default fallback agent for testing and emergency scenarios"
    service_class: "MockLLMService"
    capabilities:
      - "execution"
      - "fallback_response"
    priority: 99
    max_requests_per_minute: 1000
    cost_per_request: 0.0
    confidence_threshold: 0.1
    enabled: true
    config:
      response_template: "Fallback response: {task}"

# Agent capability definitions
capabilities:
  execution:
    description: "Basic task execution capability"
    required_methods: ["execute"]
    validation_required: false

  analysis:
    description: "Data and content analysis"
    required_methods: ["analyze", "process"]
    validation_required: true
    quality_threshold: 0.7

  code_review:
    description: "Code analysis and review"
    required_methods: ["review_code", "suggest_improvements"]
    validation_required: true
    specialized: true

  research:
    description: "Information research and fact-checking"
    required_methods: ["research", "verify_facts"]
    validation_required: true
    external_access: true

  pattern_discovery:
    description: "Pattern clustering and discovery"
    required_methods: ["cluster", "discover_patterns"]
    validation_required: false
    internal_only: true

  sentiment_analysis:
    description: "Emotional and sentiment analysis"
    required_methods: ["analyze_sentiment", "map_emotions"]
    validation_required: false
    internal_only: true

# Roundtable configuration
roundtable:
  enabled: true
  default_mode: "consensus"
  consensus_threshold: 0.7
  max_agents_per_roundtable: 5
  timeout_seconds: 60
  retry_enabled: true
  max_consensus_rounds: 3
  
  # Agent selection strategies
  selection_strategies:
    capability_based: true
    performance_weighted: true
    cost_optimized: false
    diversity_preferred: true
  
  # Voting and consensus
  voting:
    confidence_weighted: true
    capability_bonus: 0.1
    performance_bonus: 0.05
    diversity_bonus: 0.02

# Performance monitoring
monitoring:
  enabled: true
  metrics_collection: true
  response_time_tracking: true
  error_rate_monitoring: true
  cost_tracking: true
  
  # Performance thresholds
  thresholds:
    max_response_time_seconds: 30
    max_error_rate_percent: 5
    max_cost_per_hour: 10.0
    min_success_rate_percent: 90
  
  # Alerting
  alerts:
    enabled: true
    threshold_breach_alert: true
    agent_failure_alert: true
    cost_limit_alert: true

# Security and access control
security:
  api_key_validation: true
  rate_limiting: true
  request_logging: true
  sensitive_data_filtering: true
  
  # API key environment variables
  api_key_mapping:
    openai: "OPENAI_API_KEY"
    claude: "ANTHROPIC_API_KEY" 
    gemini: "GOOGLE_API_KEY"
    
  # Rate limiting per agent type
  rate_limits:
    llm_service: 100  # requests per minute

# Logging configuration
logging:
  enabled: true
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # Log destinations
  destinations:
    console: true
    file: true
    remote: false
  
  # File logging
  file_config:
    path: "logs/agents.log"
    max_size_mb: 100
    backup_count: 5
    rotation: "time"
  
  # Structured logging
  structured:
    enabled: true
    include_agent_id: true
    include_capability: true
    include_performance_metrics: true

# Development and testing
development:
  debug_mode: false
  mock_agents_enabled: true
  simulation_mode: false
  deterministic_routing: false  # For testing
  
  # Testing configuration
  testing:
    mock_responses: true
    latency_simulation: false
    error_injection: false
    performance_simulation: false

# Feature flags
features:
  multi_modal_support: false
  streaming_responses: false
  batch_processing: true
  async_execution: true
  caching_enabled: true
  
  # Experimental features
  experimental:
    adaptive_routing: false
    self_healing: false
    auto_scaling: false
    learning_optimization: false

# Integration settings
integrations:
  memory_engine: true
  pattern_governance: true
  storage_service: true
  cold_storage: false
  
  # External integrations
  external:
    webhooks: false
    message_queues: false
    databases: false
    apis: false

# Cost management
cost_management:
  enabled: true
  budget_limit_daily: 50.0
  budget_limit_monthly: 1000.0
  cost_alerts: true
  auto_throttling: true
  
  # Cost optimization
  optimization:
    cache_similar_requests: true
    batch_requests: true
    queue_non_urgent: false

# Environment-specific overrides
environments:
  development:
    agent_system:
    monitoring:
      enabled: false
    cost_management:
      budget_limit_daily: 5.0
  
  testing:
    agent_system:
    development:
      mock_agents_enabled: true
      simulation_mode: true
  
  production:
    security:
      request_logging: true
      sensitive_data_filtering: true
    monitoring:
      enabled: true
    cost_management:
      auto_throttling: true

# Version and metadata
metadata:
  created_by: "A17"
  last_updated: "2025-08-05"
  documentation: "https://docs.ioa.dev/agent-config"
  
  # Validation schema
  validation:
    required_sections: ["agent_system", "agents", "capabilities"]
    optional_sections: ["roundtable", "monitoring", "security"]
    version_compatibility: ["2.0.0", "2.1.0"]